{"version":3,"sources":["media/images/step0.svg","media/images/step1.svg","media/images/step2.svg","media/images/step3.svg","media/images/step4.svg","media/images/step5.svg","media/audios/fail.mp3","media/audios/victory.mp3","tools/RemoveAccents.js","store/reducers/game.js","store/reducers/index.js","store/actions/actionTypes.js","components/EnterPhrase.js","store/actions/game.js","components/Loading.js","components/Hangman.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","slugify","str","map","pattern","toLowerCase","replace","RegExp","initState","answer","answerCopy","isPhraseCreated","isLoading","combineReducers","game","state","action","type","phrase","EnterPhrase","props","isPhraseValid","checkWordHandler","bind","onSubmitHandler","this","length","undefined","setState","test","onAddPhrase","e","preventDefault","document","forms","value","history","push","className","name","onSubmit","placeholder","onChange","target","Component","connect","dispatch","Loading","class","Hangman","mistake","guessed","Set","youGuessed","failAudio","Audio","fail","victoryAudio","victory","isPlayed","handleGuess","letter","prevState","add","includes","guessedWords","split","word","has","join","generateButtons","key","onClick","disabled","resetButton","guessWords","onResetGame","showResult","failPlay","play","victoryPlay","onShowGame","pause","maxWrong","images","gameOver","isWinner","trim","winOrLose","checkGame","src","alt","to","defaultProps","step0","step1","step2","step3","step4","step5","setTimeout","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cbdc79df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/step0.326addd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/step1.77c02aed.svg\";","module.exports = __webpack_public_path__ + \"static/media/step2.d1bde5a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/step3.ce1a528e.svg\";","module.exports = __webpack_public_path__ + \"static/media/step4.acf26bef.svg\";","module.exports = __webpack_public_path__ + \"static/media/step5.9e01ce1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fail.047ddb78.mp3\";","module.exports = __webpack_public_path__ + \"static/media/victory.5acc4c35.mp3\";","function slugify (str) {\n  var map = {\n    'a' : 'á|à|ã|â|À|Á|Ã|Â',\n    'e' : 'é|è|ê|É|È|Ê',\n    'i' : 'í|ì|î|Í|Ì|Î',\n    'o' : 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\n    'u' : 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n    'c' : 'ç|Ç',\n  };\n\n  str = str.toLowerCase();\n\n  for (var pattern in map) {\n    str = str.replace(new RegExp(map[pattern], 'g'), pattern);\n  };\n\n  return str;\n};\n\nexport { slugify };","import * as actionTypes from \"../actions/actionTypes\";\nimport { slugify } from \"../../tools/RemoveAccents\";\n\nconst initState = {\n  answer: \"\",\n  answerCopy: \"\",\n  isPhraseCreated: false,\n  isLoading: true,\n};\n\nexport default (state = initState, action) => {\n  \n  switch (action.type) {\n    case actionTypes.ADD_PHRASE:\n      return {\n        ...state,\n        answer: slugify(action.phrase),\n        answerCopy: action.phrase,\n        isPhraseCreated: action.isPhraseCreated,\n        isLoading: true,\n      };\n\n    case actionTypes.SHOW_GAME:\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n\n    case actionTypes.RESET_GAME:\n      return {\n        answer: \"\",\n        answerCopy: \"\",\n        isPhraseCreated: false,\n        isLoading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","import gameReducer from './game';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  game: gameReducer\n});","export const ADD_PHRASE = \"ADD_PHRASE\";\nexport const SHOW_GAME = \"SHOW_GAME\";\nexport const LOADING_GAME = \"LOADING_GAME\";\nexport const RESET_GAME = \"RESET_GAME\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\nimport \"./Style.css\";\n\nclass EnterPhrase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPhraseValid: false,\n    };\n\n    this.checkWordHandler = this.checkWordHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const { answer } = this.props;\n\n    if (\n      answer.length === 0 ||\n      answer === \"\" ||\n      answer === undefined ||\n      answer === null\n    ) {\n      this.setState({\n        isPhraseValid: false,\n      });\n    }\n  }\n\n  checkWordHandler(str) {\n    const re = new RegExp(/^[^-\\s][ a-zA-ZÀ-ÿ\\u00f1\\u00d1]*$/);\n\n    if (re.test(str)) {\n      this.props.onAddPhrase(str);\n      this.setState({ isPhraseValid: true });\n    } else {\n      this.setState({ isPhraseValid: false });\n    }\n  }\n\n  onSubmitHandler(e) {\n    e.preventDefault();\n\n    return this.state.isPhraseValid &&\n      document.forms[\"game\"][\"word\"].value !== \"\"\n      ? this.props.history.push(\"/game\")\n      : false;\n  }\n\n  render() {\n    const { isPhraseValid } = this.state;\n\n    return (\n      <div>\n        <form className=\"game_form\" name=\"game\" onSubmit={this.onSubmitHandler}>\n          <div className=\"flex_custom\">\n            <h1>Hangman</h1>\n            <label className=\"label_custom\">\n              Escribe la palabra o frase para empezar el juego\n            </label>\n            <input\n              type=\"text\"\n              className=\"input_game\"\n              placeholder=\"Escribe Aqui...\"\n              name=\"word\"\n              onChange={(e) => this.checkWordHandler(e.target.value)}\n            />\n            <label className=\"label_custom label_error\">\n              {isPhraseValid\n                ? \"\"\n                : \"Usa solo letras para la palabra o frase que vayas a crear\"}\n            </label>\n            <button\n              type=\"submit\"\n              className={`btn_start_game ${isPhraseValid ? \"\" : \"btn_disable\"}`}\n            >\n              Comienza el juego\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  answer: state.game.answer,\n  answerCopy: state.game.answerCopy,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddPhrase: (str) => dispatch(actions.addPhrase(str)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterPhrase);","import * as actionTypes from \"./actionTypes\";\n\nexport const addPhrase = (phrase) => ({\n  type: actionTypes.ADD_PHRASE,\n  phrase,\n  isPhraseCreated: true,\n});\n\nexport const loadingResult = () => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch({\n        type: actionTypes.LOADING_GAME,\n      });\n    }, 0);\n  };\n};\n\nexport const showGame = () => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch({\n        type: actionTypes.SHOW_GAME,\n        isLoading: false,\n      });\n    }, 2000);\n  };\n};\n\nexport const resetGame = () => ({\n  type: actionTypes.RESET_GAME,\n});\n","import React, { Component } from 'react';\nimport \"./Style.css\";\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"flex_custom\">\n        <div class=\"loader\">Loading...</div>\n        <h2>Cargando...</h2>\n      </div>\n    )\n  }\n}\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport * as actions from \"../store/actions\";\nimport \"./Style.css\";\n\nimport step0 from \"../media/images/step0.svg\";\nimport step1 from \"../media/images/step1.svg\";\nimport step2 from \"../media/images/step2.svg\";\nimport step3 from \"../media/images/step3.svg\";\nimport step4 from \"../media/images/step4.svg\";\nimport step5 from \"../media/images/step5.svg\";\n\nimport fail from \"../media/audios/fail.mp3\";\nimport victory from \"../media/audios/victory.mp3\";\n\nexport class Hangman extends Component {\n  static defaultProps = {\n    maxWrong: 5,\n    images: [step0, step1, step2, step3, step4, step5],\n  };\n\n  state = {\n    mistake: 0,\n    guessed: new Set([]),\n    youGuessed: false,\n    failAudio: new Audio(fail),\n    victoryAudio: new Audio(victory),\n    isPlayed: false,\n  };\n\n  componentDidMount() {\n    this.props.onShowGame();\n    this.state.failAudio.pause();\n    this.state.victoryAudio.pause();\n  }\n\n  handleGuess = (e) => {\n    const { answer } = this.props;\n    let letter = e.target.value;\n    this.setState((prevState) => ({\n      guessed: prevState.guessed.add(letter),\n      mistake: prevState.mistake + (answer.includes(letter) ? 0 : 1),\n    }));\n  };\n\n  guessedWords = () => {\n    const { answer } = this.props;\n    return answer.split(\" \").map(\n      (word) =>\n        word\n          .split(\"\")\n          .map((letter) => (this.state.guessed.has(letter) ? letter : \" _ \"))\n          .join(\"\") + \" \"\n    );\n  };\n\n  generateButtons = () => {\n    return \"qwertyuiopasdfghjklñzxcvbnm\".split(\"\").map((letter) => (\n      <button\n        className=\"btn btn-lg btn-primary m-2\"\n        key={letter}\n        value={letter}\n        onClick={this.handleGuess}\n        disabled={this.state.guessed.has(letter)}\n      >\n        {letter}\n      </button>\n    ));\n  };\n\n  resetButton = () => {\n    this.setState({\n      mistake: 0,\n      guessWords: new Set([]),\n      youGuessed: false,\n    });\n    // Reset state on Store\n    this.props.onResetGame();\n    this.props.history.push(\"/\");\n  };\n\n  showResult = () => {\n    this.setState({\n      youGuessed: true,\n    });\n  };\n\n  failPlay = () => {\n    this.state.failAudio.play();\n  };\n\n  victoryPlay = () => {\n    this.state.victoryAudio.play();\n  };\n\n  render() {\n    const { mistake, youGuessed } = this.state;\n    const { answer, answerCopy, maxWrong, isLoading, images } = this.props;\n    const gameOver = mistake >= maxWrong;\n\n    const isWinner = youGuessed\n      ? answer.trim(\"\")\n      : this.guessedWords().join(\"\").trim(\"\") === answer.trim(\"\");\n\n    const winOrLose = isWinner ? (\n      <div>\n        <h1>Lo lograste!</h1>\n        <button className=\"btn_start_game\" onClick={() => this.resetButton()}>\n          Jugar otra vez\n        </button>\n        {this.victoryPlay()}\n      </div>\n    ) : gameOver ? (\n      <div>\n        <h1>Perdiste!</h1>\n        <button className=\"btn_start_game\" onClick={() => this.resetButton()}>\n          Jugar otra vez\n        </button>\n        {gameOver ? this.failPlay() : null}\n      </div>\n    ) : (\n      <div>\n        {this.generateButtons()}\n        <div>\n          <button className=\"btn_start_game\" onClick={() => this.showResult()}>\n            Resolver\n          </button>\n        </div>\n      </div>\n    );\n\n    const checkGame = isLoading ? (\n      <Loading />\n    ) : (\n      <div className=\"container\">\n        <h1 className=\"text-center\">\n          Cuanto turnos llevas: {mistake} de {maxWrong}\n        </h1>\n        <div className=\"text-center\">\n          <img src={images[mistake]} alt=\"\" className=\"guy\" />\n        </div>\n        <div className=\"text-center\">\n          <h4>\n            {!gameOver\n              ? \"Adivina la palabra o frase:\"\n              : \"La palabra o frase era:\"}\n          </h4>\n          <pre>\n            <h1 className=\"game_word\">\n              {gameOver || isWinner || youGuessed\n                ? answerCopy\n                : this.guessedWords()}\n            </h1>\n          </pre>\n          {winOrLose}\n        </div>\n      </div>\n    );\n\n    if (answer.length === 0) return <Redirect to=\"/\" />;\n\n    return <div className=\"game_bg\">{checkGame}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  answer: state.game.answer,\n  answerCopy: state.game.answerCopy,\n  isLoading: state.game.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onShowGame: () => dispatch(actions.showGame()),\n  onResetGame: () => dispatch(actions.resetGame()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Hangman);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport EnterPhrase from './components/EnterPhrase';\nimport Hangman from './components/Hangman';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={EnterPhrase} />\n          <Route path=\"/game\" component={Hangman} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducers\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./index.css\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}